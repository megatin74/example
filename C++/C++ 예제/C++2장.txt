/* 
	bool1.cpp
	C style program
*/

#include<stdio.h>

const int TRUE=1;
const int FALSE=0;

int IsPositive(int i)
{
	if(i<0)	//i<0
		return FALSE;
	else	//i>=0
		return TRUE;
}

int main (void)
{
	int num;
	int result;

	printf("숫자 입력: ");
	scanf("%d",&num);

	result=IsPositive(num);
	if(result==TRUE)
		printf("Positive number \n");
	else
		printf("Negative number \n");

	return 0;
}



/* 
	bool2.cpp
	C++ style program
*/

#include<iostream>

using std::cin;
using std::cout;
using std::endl;

bool IsPositive(int i)
{
	if(i<0)	//i<0
		return false;
	else
		return true;
}

int main (void)
{
	int num;
	bool result;

	cout<<"숫자 입력 : ";
	cin>>num;

	result=IsPositive(num);
	if(result==true)
		cout<<"Positive number"<<endl;
	else
		cout<<"Negative number"<<endl;

	return 0;
}


/*
	bool3.cpp
	true & false
*/

#include<iostream>

using std::endl;
using std::cout;
using std::cin;

int main (void)
{
	int BOOL=true;
	cout<<"BOOL : "<<BOOL<<endl;

	BOOL=false;
	cout<<"BOOL : "<<BOOL<<endl;

	return 0;
}


/*
	reference.cpp
*/

#include<iostream>

using std::cout;
using std::endl;

int main (void)
{
	int val=10;
	int &ref=val;

	val++;
	cout<<"ref : "<<ref<<endl;
	cout<<"val : "<<val<<endl;

	ref++;
	cout<<"ref : "<<ref<<endl;
	cout<<"val : "<<val<<endl;

	return 0;
}


/*
	swap1.cpp
*/

#include<iostream>

using std::cout;
using std::endl;

void swap(int *a, int *b)	//Call By Reference
{
	int temp=*a;
	*a=*b;
	*b=temp;
}

int main (void)
{
	int val1=10;
	int val2=20;

	cout<<"val1 : "<<val1<<' ';
	cout<<"val2 : "<<val2<<endl;

	swap(&val1,&val2);	//call by reference

	cout<<"val1 : "<<val1<<' ';
	cout<<"val2 : "<<val2<<endl;

	return 0;
}


/*
	swap2.cpp
*/

#include<iostream>

using std::cout;
using std::endl;

void swap(int& a, int& b)	//call by reference
{
	int temp=a;
	a=b;
	b=temp;
}

int main (void)
{
	int val1=10;
	int val2=20;

	cout<<"val1 : "<<val1<<' ';
	cout<<"val2 : "<<val2<<endl;

	swap(val1,val2);	//call by reference
	cout<<"val1 : "<<val1<<' ';
	cout<<"val2 : "<<val2<<endl;

	return 0;
}

/*
	reffunc.cpp
*/

#include<iostream>

using std::cout;
using std::cin;
using std::endl;

struct _Person {
	int age;	//나이
	char name[20];	//이름
	char personalID[20];	//민증
};

typedef struct _Person Person;

void ShowData(Person p)
{
	cout<<"****** 개인 정보 출력 *******"<<endl;
	cout<<"이    름 : "<<p.name<<endl;
	cout<<"주민번호 : "<<p.personalID<<endl;
	cout<<"나    이 : "<<p.age<<endl;
}

int main (void)
{
	Person man;

	cout<<"이    름 : ";	cin>>man.name;
	cout<<"나    이 : ";	cin>>man.age;
	cout<<"주민번호 : ";	cin>>man.personalID;

	ShowData(man);

	return 0;
}

/*
	reffunc2.cpp
*/

#include<iostream>

using std::cout;
using std::cin;
using std::endl;

struct _Person {
	int age;	//나이
	char name[20];	//이름
	char personalID[20];	//민증
};

typedef struct _Person Person;

void ShowData(const Person &p)
{
	cout<<"****** 개인 정보 출력 *******"<<endl;
	cout<<"이    름 : "<<p.name<<endl;
	cout<<"주민번호 : "<<p.personalID<<endl;
	cout<<"나    이 : "<<p.age<<endl;
}

int main (void)
{
	Person man;

	cout<<"이    름 : ";	cin>>man.name;
	cout<<"나    이 : ";	cin>>man.age;
	cout<<"주민번호 : ";	cin>>man.personalID;

	ShowData(man);

	return 0;
}


/*
	ref_return.cpp
*/

#include<iostream>

using std::cout;
using std::endl;

int& increment(int &val)
{
	val++;
	return val;
}

int main(void)
{
	int n=10;
	int &ref=increment(n);

	cout<<"n   : "<<n<<endl;
	cout<<"ref : "<<ref<<endl;
	return 0;
}


/*
	malloc_free.cpp
*/

#include<iostream>

using std::cin;
using std::cout;
using std::endl;

#define DEBUG 1	//연습으로 컴파일할때
//#define DEBUG 0	//최종으로 할때 컴파일

int main (void)
{
	int size;
	cout<<"할당하고자 하는 배열의 크기: ";
	cin>>size;

	int *arr=(int*)malloc(sizeof(int)*size);

#if DEBUG==1
	if(arr==NULL)
	{
		cout<<"메모리 할당 실패"<<endl;
		exit(1);
	}
#endif


	for(int i=0; i<size; i++)
		arr[i]=i+10;

	for(int j=0; j<size; j++)
		cout<<" arr["<<j<<"]= "<<arr[j]<<endl;

	free(arr);
	return 0;
}


/*
	DEBUG_new_delete.cpp(new_delete.cpp~)
*/
#include<iostream>

using std::cout;
using std::cin;
using std::endl;

#define DEBUG 1	//체험판 컴파일
//#define DEBUG 0	//시중판 컴파일

int main (void)
{
	int size;
	cout<<"할당하고자 하는 배열의 크기 : ";
	cin>>size;
	
	int* arr=new int[size];
#if DEBUG==1
	if(arr==NULL)
	{
		cout<<"메모리 할당 실패"<<endl;
		exit(1);
	}
#endif

	for(int i=0; i<size; i++)
		arr[i]=i+10;

	for(int j=0; j<size; j++)
		cout<<"arr["<<j<<"]="<<arr[j]<<endl;

	delete[] arr;

	return 0;
}


