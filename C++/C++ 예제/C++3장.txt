/*
	oo1.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

struct Account{
	char accID[20];	//계좌번호
	char secID[20];	//비밀번호
	char name[20];	//이    름
	int balance;	//잔	액
};

int main (void)
{
	Account yoon={"1234","2321","yoon",1000};
	cout<<"계좌번호 : "<<yoon.accID<<endl;
	cout<<"비밀번호 : "<<yoon.secID<<endl;
	cout<<"이    름 : "<<yoon.name<<endl;
	cout<<"잔    액 : "<<yoon.balance<<endl;

	return 0;
}


/*
	oo2.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

struct Account{
	char accID[20];	//계좌번호
	char secID[20];	//비밀번호
	char name[20];	//이    름
	int balance;	//잔	액
};

void Deposit(Account &acc, int money)
{
	acc.balance+=money;
}
void Withdraw(Account &acc, int money)
{
	acc.balance-=money;
}

int main (void)
{
	Account yoon={"1234","2321","yoon",1000};

	Deposit(yoon,100);
	cout<<"잔    액 : "<<yoon.balance<<endl;
	Withdraw(yoon,200);
	cout<<"잔    액 : "<<yoon.balance<<endl;

	return 0;
}

/*
	oo3.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

struct Account{
	char accID[20];	//계좌번호
	char secID[20];	//비밀번호
	char name[20];	//이    름
	int balance;	//잔	액

	void Deposit(int money)	//입금
	{
		balance+=money;
	}
	void Withdraw(int money)	//출금
	{
		balance-=money;
	}
};

int main (void)
{
	Account yoon={"1234","2321","yoon",1000};

	yoon.Deposit(100);
	cout<<"잔    액 : "<<yoon.balance<<endl;
	yoon.Withdraw(200);
	cout<<"잔    액 : "<<yoon.balance<<endl;

	return 0;
}

/*
	oo4.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class Account{
public:
	char accID[20];	//계좌번호
	char secID[20];	//비밀번호
	char name[20];	//이    름
	int balance;	//잔	액

	void Deposit(int money)	//입금
	{
		balance+=money;
	}
	void Withdraw(int money)	//출금
	{
		balance-=money;
	}
};

int main (void)
{
	Account yoon={"1234","2321","yoon",1000};

	yoon.Deposit(100);
	cout<<"잔    액 : "<<yoon.balance<<endl;
	yoon.Withdraw(200);
	cout<<"잔    액 : "<<yoon.balance<<endl;

	return 0;
}

/*
	Access.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class Counter{
public:
	int val;
	void Increment(void)
	{
		val++;	//내부 접근
	}
};

int main (void)
{
	Counter cnt;
	cnt.val=0;
	cnt.Increment();
	cout<<cnt.val<<endl;

	return 0;
}

/*
	AccessControl1.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

const int OPEN=1;
const int CLOSE=2;

class Door{
private:
	int state;
public:
	void Open()
	{
		state=OPEN;
	}
	void Close()
	{
		state=CLOSE;
	}
	void ShowState()
	{
		cout<<"현재 문의 상태 : ";
		cout<<((state==OPEN)? "OPEN":"CLOSE")<<endl;
	}
};

int main()
{
	Door d;
//	d.state=OPEN;

	d.Open();
	d.ShowState();

	return 0;
}

/*
	AccessControl?.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

const int OPEN=1;
const int CLOSE=2;

class Door{
private:
	int state;
public:
	void Open();
	void Close();
	void ShowState();
};

inline void Door::Open()
{
	state=OPEN;
}
inline void Door::Close()
{
	state=CLOSE;
}
inline void Door::ShowState()
{
	cout<<"현재 문의 상태 : ";
	cout<<((state==OPEN)? "OPEN":"CLOSE")<<endl;
}

int main()
{
	Door d;

	d.Open();
	d.ShowState();

	return 0;
}