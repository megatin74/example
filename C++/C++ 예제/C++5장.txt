/*
	InitStyle.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

int main (void)
{
	int val1(20);	//c++ 스타일 초기화
	int val2=40;	//c 스타일 초기화

	cout<<"val1 : "<<val1<<endl;
	cout<<"val2 : "<<val2<<endl;

	return 0;
}


/*
	InitStyle2.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class AAA
{
	int val;
public:
	AAA(int n){
		val=n;
	}
	void ShowData(){
		cout<<val<<endl;
	}
};

int main (void)
{
	AAA a1(10);
	a1.ShowData();

	AAA a2=20;
	a2.ShowData();

	return 0;
}


/*
	CopyCon1.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class AAA
{
public:
	AAA(){
		cout<<"AAA() 호출"<<endl;
	}
	AAA(int i){
		cout<<"AAA(int i)호출"<<endl;
	}
	AAA(const AAA& a){
		cout<<"AAA(const AAA& a) 호출"<<endl;
	}
};

int main(void)
{
	AAA obj1;	//AAA()
	AAA obj2(10);	//AAA(int i)
	AAA obj3(obj2);	//AAA(const AAA& a)

	return 0;
}


/*
	CopyCon2.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class Point
{
	int x, y;
public:
	Point(int _x, int _y){
		x=_x;
		y=_y;
	}
	void ShowData(){
		cout<<x<<' '<<y<<endl;
	}
};

int main (void)
{
	Point p1(10,20);
	Point p2(p1);

	p1.ShowData();
	p2.ShowData();

	return 0;
}


/*
	CopyCon3.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class Point
{
	int x, y;
public:
	Point(int _x, int _y){
		x=_x;
		y=_y;
	}
	Point(Point& p){	//디폴트 복사 생성자와 같은 형태!
		x=p.x;
		y=p.y;
	}
	void ShowData(){
		cout<<x<<' '<<y<<endl;
	}
};

int main (void)
{
	Point p1(10,20);
	Point p2(p1);

	p1.ShowData();
	p2.ShowData();

	return 0;
}


/*
	CopyCon4.cpp
*/	//error!!!발생된다
#include<iostream>
using std::cout;
using std::endl;

class Person
{
	char *name;
	char *phone;
	int age;
public:
	Person(char* _name, char* _phone, int _age);
	~Person();
	void ShowData();
};

Person::Person(char* _name, char* _phone, int _age)
{
	name=new char[strlen(_name)+1];
	strcpy(name,_name);

	phone=new char[strlen(_phone)+1];
	strcpy(phone,_phone);

	age=_age;
}
Person::~Person()
{
	delete[] name;
	delete[] phone;
}
void Person::ShowData()
{
	cout<<"name  : "<<name<<endl;
	cout<<"phone : "<<phone<<endl;
	cout<<"age   : "<<age<<endl;
}

int main(void)
{
	Person p1("KIM","013-333-5555",22);
	Person p2=p1;	//Person p2(p1);

	return 0;
}


/*
	CopyCon5.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class Person
{
	char *name;
	char *phone;
	int age;
public:
	Person(char* _name, char* _phone, int _age);
	Person(Person& p);
	~Person();
	void ShowData();
};

Person::Person(char* _name, char* _phone, int _age)
{
	name=new char[strlen(_name)+1];
	strcpy(name,_name);

	phone=new char[strlen(_phone)+1];
	strcpy(phone,_phone);

	age=_age;
}
Person::Person(const Person& p)
{
	name=new char[strlen(p.name)+1];
	strcpy(name,p.name);

	phone=new char[strlen(p.phone)+1];
	strcpy(phone,p.phone);

	age=p.age;
}
Person::~Person()
{
	delete[] name;
	delete[] phone;
}
void Person::ShowData()
{
	cout<<"name  : "<<name<<endl;
	cout<<"phone : "<<phone<<endl;
	cout<<"age   : "<<age<<endl;
}

int main(void)
{
	Person p1("KIM","013-333-5555",22);
	Person p2=p1;	//Person p2(p1);

	return 0;
}



/*
	CopyConCase1.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class AAA
{
public:
	AAA(){
		cout<<"AAA() 호출"<<endl;
	}
	AAA(const AAA& a){
		cout<<"AAA(const A& a) 호출"<<endl;
	}
};

int main (void)
{
	AAA obj1;
	AAA obj2=obj1;

	return 0;
}


/*
	CopyConCase2.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class AAA
{
	int val;
public:
	AAA(int i){
		val=i;
	}
	AAA(const AAA& a){
		cout<<"AAA(const A& a) 호출"<<endl;
		val=a.val;
	}
	void ShowData(){
		cout<<"val: "<<val<<endl;
	}
};

void function(AAA a)
{
	a.ShowData();
}

int main (void)
{
	AAA obj(30);
	function(obj);

	return 0;
}

/*
	CopyConCase3.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class AAA
{
	int val;
public:
	AAA(int i){
		val=i;
	}
	AAA(const AAA& a){
		cout<<"AAA(const A& a) 호출"<<endl;
		val=a.val;
	}
	void ShowData(){
		cout<<"val: "<<val<<endl;
	}
};

AAA function(void)
{
	AAA a(10);
	return a;
}

int main (void)
{
	function();// function().ShowData();

	return 0;
}