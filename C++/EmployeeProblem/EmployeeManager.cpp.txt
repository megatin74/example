/*
	EmploteeManager1.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

class Permanent
{
private:
	char name[20];	//이름
	int salary;	//기본 급여
public:
	Permanent(char* _name, int sal);
	const char* GetName();
	int GetPay();
};
Permanent::Permanent(char* _name, int sal)
{
	strcpy(name,_name);
	salary=sal;
}
const char* Permanent::GetName()
{
	return name;
}
int Permanent::GetPay()
{
	return salary;
}

class Department
{
	Permanent* empList[10];
	int index;
public:
	Department():index(0){}
	void AddEmployee(Permanent* emp);
	void ShowList();
};
void Department::AddEmployee(Permanent* emp)
{
	empList[index++]=emp;
}
void Department::ShowList()
{
	for(int i=0; i<index; i++)
	{
		cout<<"name   : "<<empList[i]->GetName()<<endl;
		cout<<"salary : "<<empList[i]->GetPay()<<endl;
		cout<<endl;
	}
}

int main(void)
{
	//직원을 관리하는 CONTROL 클래스
	Department department;

	//직원 등록
	department.AddEmployee(new Permanent("KIM",1000));
	department.AddEmployee(new Permanent("LEE",1500));
	department.AddEmployee(new Permanent("JUN",2000));

	//최종적으로 이번 달에 지불해야 할 급여는?
	department.ShowList();

	return 0;
}






/*
	EmployeeManager3.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

/***** Employee class **************/
class Employee
{
protected:
	char name[20];
public:
	Employee(char* _name);
	const char* GetName();
};
Employee::Employee(char* _name)
{
	strcpy(name,_name);
}
const char* Employee::GetName()
{
	return name;
}

/***** Permanent class **************/
class Permanent :public Employee
{
	int salary;	//기본 급여
public:
	Permanent(char* _name, int sal);
	int GetPay();
};

Permanent::Permanent(char* _name, int sal)
:Employee(_name)
{
	salary=sal;
}
int Permanent::GetPay()
{
	return salary;
}

/**** Temporary class **************/
class Temporary :public Employee
{
private:
	int time;	//일한 시간
	int pay;	//시간당 급여
public:
	Temporary(char* _name, int _time, int _pay);
	int GetPay();
};
Temporary::Temporary(char* _name, int _time, int _pay)
:Employee(_name)
{
	time=_time;
	pay=_pay;
}
int Temporary::GetPay()
{
	return pay*time;
}

/**** Department class **************/
class Department
{
private:
	Employee* empList[10];
	int index;
public:
	Department():index(0){}
	void AddEmployee(Employee* emp);
	void ShowList();	//급여 리스트 출력
};

void Department::AddEmployee(Employee* emp)
{
	empList[index++]=emp;
}
void Department::ShowList()
{
	for(int i=0;i<index;i++)
	{
		cout<<"name  : "<<empList[i]->GetName()<<endl;
		//cout<<"salary: "<<empList[i]->GetPay()<<endl;
		cout<<endl;
	}
}

int main()
{
	//직원을 관리하는 CONTROL클래스
	Department department;

	//직원 등록
	department.AddEmployee(new Permanent("KIM",1000));
	department.AddEmployee(new Permanent("JEE",1500));
	department.AddEmployee(new Temporary("HAN",10,200));
	department.AddEmployee(new Temporary("JANG",12,300));

	//최종적으로 이번 달에 지불해야 할 급여는?
	department.ShowList();
	return 0;
}


/*
	EmployeeManager4.cpp
*/
#include<iostream>
using std::cout;
using std::endl;

/***** Employee class **************/
class Employee
{
protected:
	char name[20];
public:
	Employee(char* _name);
	virtual int GetPay()
	{
		return 0;
	}
	const char* GetName();
};
Employee::Employee(char* _name)
{
	strcpy(name,_name);
}
const char* Employee::GetName()
{
	return name;
}

/***** Permanent class **************/
class Permanent :public Employee
{
	int salary;	//기본 급여
public:
	Permanent(char* _name, int sal);
	int GetPay();
};

Permanent::Permanent(char* _name, int sal)
:Employee(_name)
{
	salary=sal;
}
int Permanent::GetPay()
{
	return salary;
}

/**** Temporary class **************/
class Temporary :public Employee
{
private:
	int time;	//일한 시간
	int pay;	//시간당 급여
public:
	Temporary(char* _name, int _time, int _pay);
	int GetPay();
};
Temporary::Temporary(char* _name, int _time, int _pay)
:Employee(_name)
{
	time=_time;
	pay=_pay;
}
int Temporary::GetPay()
{
	return pay*time;
}

/**** Department class **************/
class Department
{
private:
	Employee* empList[10];
	int index;
public:
	Department():index(0){}
	void AddEmployee(Employee* emp);
	void ShowList();	//급여 리스트 출력
};

void Department::AddEmployee(Employee* emp)
{
	empList[index++]=emp;
}
void Department::ShowList()
{
	for(int i=0;i<index;i++)
	{
		cout<<"name  : "<<empList[i]->GetName()<<endl;
		cout<<"salary: "<<empList[i]->GetPay()<<endl;
		cout<<endl;
	}
}

int main()
{
	//직원을 관리하는 CONTROL클래스
	Department department;

	//직원 등록
	department.AddEmployee(new Permanent("KIM",1000));
	department.AddEmployee(new Permanent("JEE",1500));
	department.AddEmployee(new Temporary("HAN",10,200));
	department.AddEmployee(new Temporary("JANG",12,300));

	//최종적으로 이번 달에 지불해야 할 급여는?
	department.ShowList();
	return 0;
}


/*
	EmployeeManager5.cpp
	연습문제 8-3
*/
#include<iostream>
using std::cout;
using std::endl;

/***** Employee class **************/
class Employee
{
protected:
	char name[20];
public:
	Employee(char* _name);
	virtual int GetPay()=0;
	const char* GetName();
};
Employee::Employee(char* _name)
{
	strcpy(name,_name);
}
const char* Employee::GetName()
{
	return name;
}

/***** Permanent class **************/
class Permanent :public Employee
{
	int salary;	//기본 급여
public:
	Permanent(char* _name, int sal);
	int GetPay();
};

Permanent::Permanent(char* _name, int sal)
:Employee(_name)
{
	salary=sal;
}
int Permanent::GetPay()
{
	return salary;
}

/**** Temporary class **************/
class Temporary :public Employee
{
private:
	int time;	//일한 시간
	int pay;	//시간당 급여
public:
	Temporary(char* _name, int _time, int _pay);
	int GetPay();
};
Temporary::Temporary(char* _name, int _time, int _pay)
:Employee(_name)
{
	time=_time;
	pay=_pay;
}
int Temporary::GetPay()
{
	return pay*time;
}

/**** SalesPerson class **************/
//급여 계산 방식: 연봉제(기본 급여)+인센티브(판매 수익 * 0.15)

class SalesPerson :public Permanent
{
private:
	int earnings;
public:
	SalesPerson(char* _name, int sal, int earn)
		:Permanent(_name,sal)
	{
		earnings=earn;
	}
	int GetPay();	
};
int SalesPerson::GetPay()
{
	return Permanent::GetPay()+earnings*0.15;
}

/**** Department class **************/
class Department
{
private:
	Employee* empList[10];
	int index;
public:
	Department():index(0){}
	void AddEmployee(Employee* emp);
	void ShowList();	//급여 리스트 출력
};

void Department::AddEmployee(Employee* emp)
{
	empList[index++]=emp;
}
void Department::ShowList()
{
	for(int i=0;i<index;i++)
	{
		cout<<"name  : "<<empList[i]->GetName()<<endl;
		cout<<"salary: "<<empList[i]->GetPay()<<endl;
		cout<<endl;
	}
}

int main()
{
	//직원을 관리하는 CONTROL클래스
	Department department;

	//직원 등록
	department.AddEmployee(new Permanent("KIM",1000));
	department.AddEmployee(new Permanent("JEE",1500));
	department.AddEmployee(new Temporary("HAN",10,200));
	department.AddEmployee(new Temporary("JANG",12,300));

	//최종적으로 이번 달에 지불해야 할 급여는?
	department.ShowList();
	return 0;
}
